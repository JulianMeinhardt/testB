{"version":3,"file":"adesso-grid-lib.js.map","sources":["ng://adesso-grid-lib/lib/input-verifier.service.ts","ng://adesso-grid-lib/lib/custom-template.directive.ts","ng://adesso-grid-lib/lib/tabbed-grid/tabbed-grid.component.ts","ng://adesso-grid-lib/lib/adesso-angular-lib.module.ts","ng://adesso-grid-lib/lib/model/tabbed-grid.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InputVerifierService {\r\n\r\n  constructor() { }\r\n\r\n  exists(parent: any, parentName: string, property: string) {\r\n    if (!parent[property]) {\r\n      throw new Error('Property \"' + property + '\"  is missing in ' + parentName + '!');\r\n    }\r\n  }\r\n\r\n  allExist(parent: any, parentName: string, properties: string[]) {\r\n    for (const property of properties) {\r\n      this.exists(parent, parentName, property);\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input, TemplateRef, AfterViewInit } from '@angular/core';\r\nimport { InputVerifierService } from './input-verifier.service';\r\n\r\n@Directive({\r\n  selector: '[libCustomTemplate]'\r\n})\r\nexport class CustomTemplateDirective implements AfterViewInit {\r\n\r\n  @Input() property: string;\r\n\r\n  constructor(\r\n    public templateRef: TemplateRef<any>,\r\n    private inputVerifierService: InputVerifierService,\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.inputVerifierService.exists(this, 'CustomTemplateDirective', 'property');\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ContentChild, ContentChildren, Input, QueryList, TemplateRef, ViewChild } from '@angular/core';\r\nimport { MatSort, MatTableDataSource } from '@angular/material';\r\nimport { CustomTemplateDirective } from '../custom-template.directive';\r\nimport { InputVerifierService } from '../input-verifier.service';\r\nimport { ITableDefinition, ITableRow, ITableTab } from '../model/tabbed-grid';\r\n\r\n@Component({\r\n  selector: 'lib-tabbed-grid',\r\n  templateUrl: './tabbed-grid.component.html',\r\n  styleUrls: ['./tabbed-grid.component.css']\r\n})\r\nexport class TabbedGridComponent implements AfterViewInit {\r\n  @Input() computeTabLabel: (data: any) => string;\r\n  @Input() tableDefinition: ITableDefinition;\r\n  @Input() displayedColumns: string[];\r\n\r\n  @ContentChild('detailsTemplate') detailsTemplate: TemplateRef<any>;\r\n  @ContentChildren(CustomTemplateDirective) customTemplateDirectives: QueryList<CustomTemplateDirective>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  tabs: ITableTab[] = [];\r\n  selectedTabIndex = 0;\r\n  dataSource: MatTableDataSource<any>;\r\n  customTemplateRefs: { [key: string]: TemplateRef<any> } = {};\r\n\r\n  constructor(\r\n    private inputVerifierService: InputVerifierService,\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.inputVerifierService.allExist(this, 'TabbedGridComponent', [\r\n      'computeTabLabel',\r\n      'tableDefinition',\r\n      'detailsTemplate',\r\n    ]);\r\n\r\n    this.customTemplateDirectives.forEach((t) => {\r\n      if (this.customTemplateRefs[t.property]) {\r\n        throw new Error('Duplicate custom template definition found for ' + t.property);\r\n      }\r\n\r\n      this.customTemplateRefs[t.property] = t.templateRef;\r\n    });\r\n  }\r\n\r\n  rowClick(row: ITableRow) {\r\n    const tabNumber = this.tabs.findIndex((e) => e.row.id === row.id);\r\n\r\n    if (tabNumber === -1) {\r\n      this.tabs.push({ label: this.computeTabLabel(row.data), row });\r\n      this.selectedTabIndex = this.tabs.length;\r\n    } else {\r\n      this.selectedTabIndex = tabNumber + 1;\r\n    }\r\n  }\r\n\r\n  closeTab(index: number) {\r\n    this.tabs.splice(index, 1);\r\n    if (index === this.selectedTabIndex - 1) {\r\n      this.selectedTabIndex = 0;\r\n    }\r\n  }\r\n\r\n  getCustomTemplate(property: string): TemplateRef<any> {\r\n    const customTemplateRef = this.customTemplateRefs[property];\r\n    if (!customTemplateRef) {\r\n      throw new Error('Could not find custom template definition for ' + property);\r\n    }\r\n    return customTemplateRef;\r\n  }\r\n\r\n  @Input()\r\n  set tableData(data: any[]) {\r\n    if (!data) {\r\n      this.dataSource = null;\r\n      return;\r\n    }\r\n\r\n    let id = 0;\r\n    const rows = data.map<ITableRow>((v) => ({ data: v, id: id++ }));\r\n    this.dataSource = new MatTableDataSource(rows);\r\n    this.dataSource.sortingDataAccessor = (row: ITableRow, property) => {\r\n      return row.data[property];\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatSortModule, MatTableModule, MatTabsModule } from '@angular/material';\r\nimport { TabbedGridComponent } from './tabbed-grid/tabbed-grid.component';\r\nimport { CustomTemplateDirective } from './custom-template.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatSortModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n  ],\r\n  declarations: [\r\n    TabbedGridComponent,\r\n    CustomTemplateDirective,\r\n  ],\r\n  exports: [\r\n    TabbedGridComponent,\r\n    CustomTemplateDirective,\r\n  ]\r\n})\r\nexport class AdessoAngularLibModule { }\r\n","export enum ColumnType {\r\n    TEXT = 'TEXT',\r\n    DATE = 'DATE',\r\n    NUMBER = 'NUMBER',\r\n    ENUM = 'ENUM',\r\n}\r\n\r\nexport interface ITableColumnDefinition {\r\n    customContent?: boolean;\r\n    label: string;\r\n    property: string;\r\n    type: ColumnType;\r\n}\r\n\r\nexport interface ITableDefinition {\r\n    columns: ITableColumnDefinition[];\r\n    displayedColumns: string[];\r\n}\r\n\r\nexport interface ITableRow {\r\n    data: any;\r\n    id: number;\r\n}\r\n\r\nexport interface ITableTab {\r\n    row: ITableRow;\r\n    label: string;\r\n}\r\n"],"names":["tslib_1.__values"],"mappings":";;;;;;;;;;IAOE;KAAiB;;;;;;;IAEjB,qCAAM;;;;;;IAAN,UAAO,MAAW,EAAE,UAAkB,EAAE,QAAgB;QACtD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,YAAY,GAAG,QAAQ,GAAG,mBAAmB,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;SACnF;KACF;;;;;;;IAED,uCAAQ;;;;;;IAAR,UAAS,MAAW,EAAE,UAAkB,EAAE,UAAoB;;;YAC5D,KAAuB,IAAA,eAAAA,SAAA,UAAU,CAAA,sCAAA,8DAAE;gBAA9B,IAAM,QAAQ,uBAAA;gBACjB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;aAC3C;;;;;;;;;KACF;;gBAjBF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;+BAJD;CAEA;;;;;;ACFA;IAUE,iCACS,WAA6B,EAC5B,oBAA0C;QAD3C,gBAAW,GAAX,WAAW,CAAkB;QAC5B,yBAAoB,GAApB,oBAAoB,CAAsB;KAC/C;;;;IAEL,iDAAe;;;IAAf;QACE,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,EAAE,yBAAyB,EAAE,UAAU,CAAC,CAAC;KAC/E;;gBAdF,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;iBAChC;;;;gBAL0B,WAAW;gBAC7B,oBAAoB;;;2BAO1B,KAAK;;IAUR,8BAAC;CAfD;;;;;;ACHA;IAyBE,6BACU,oBAA0C;QAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;QANpD,SAAI,GAAgB,EAAE,CAAC;QACvB,qBAAgB,GAAG,CAAC,CAAC;QAErB,uBAAkB,GAAwC,EAAE,CAAC;KAIxD;;;;IAEL,6CAAe;;;IAAf;QAAA,iBAcC;QAbC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,EAAE,qBAAqB,EAAE;YAC9D,iBAAiB;YACjB,iBAAiB;YACjB,iBAAiB;SAClB,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,CAAC,OAAO;;;;QAAC,UAAC,CAAC;YACtC,IAAI,KAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,iDAAiD,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;aACjF;YAED,KAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC;SACrD,EAAC,CAAC;KACJ;;;;;IAED,sCAAQ;;;;IAAR,UAAS,GAAc;;YACf,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS;;;;QAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,GAAA,EAAC;QAEjE,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAA,EAAE,CAAC,CAAC;YAC/D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,SAAS,GAAG,CAAC,CAAC;SACvC;KACF;;;;;IAED,sCAAQ;;;;IAAR,UAAS,KAAa;QACpB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC3B,IAAI,KAAK,KAAK,IAAI,CAAC,gBAAgB,GAAG,CAAC,EAAE;YACvC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAC3B;KACF;;;;;IAED,+CAAiB;;;;IAAjB,UAAkB,QAAgB;;YAC1B,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;QAC3D,IAAI,CAAC,iBAAiB,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,gDAAgD,GAAG,QAAQ,CAAC,CAAC;SAC9E;QACD,OAAO,iBAAiB,CAAC;KAC1B;IAED,sBACI,0CAAS;;;;;QADb,UACc,IAAW;YACvB,IAAI,CAAC,IAAI,EAAE;gBACT,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,OAAO;aACR;;gBAEG,EAAE,GAAG,CAAC;;gBACJ,IAAI,GAAG,IAAI,CAAC,GAAG;;;;YAAY,UAAC,CAAC,IAAK,QAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAC,EAAC;YAChE,IAAI,CAAC,UAAU,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,CAAC,mBAAmB;;;;;YAAG,UAAC,GAAc,EAAE,QAAQ;gBAC7D,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC3B,CAAA,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAClC;;;OAAA;;gBA/EF,SAAS,SAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,8zDAA2C;;iBAE5C;;;;gBAPQ,oBAAoB;;;kCAS1B,KAAK;kCACL,KAAK;mCACL,KAAK;kCAEL,YAAY,SAAC,iBAAiB;2CAC9B,eAAe,SAAC,uBAAuB;uBACvC,SAAS,SAAC,OAAO;4BAqDjB,KAAK;;IAeR,0BAAC;CAhFD;;;;;;ACNA;IAMA;KAgBuC;;gBAhBtC,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,YAAY;wBACZ,aAAa;wBACb,aAAa;wBACb,cAAc;qBACf;oBACD,YAAY,EAAE;wBACZ,mBAAmB;wBACnB,uBAAuB;qBACxB;oBACD,OAAO,EAAE;wBACP,mBAAmB;wBACnB,uBAAuB;qBACxB;iBACF;;IACqC,6BAAC;CAhBvC;;;;;;;;ICLI,MAAO,MAAM;IACb,MAAO,MAAM;IACb,QAAS,QAAQ;IACjB,MAAO,MAAM;;;;;;;;;;;;;;;"}
