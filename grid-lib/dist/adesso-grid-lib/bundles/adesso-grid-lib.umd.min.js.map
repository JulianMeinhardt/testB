{"version":3,"sources":["ng://adesso-grid-lib/lib/input-verifier.service.ts","node_modules/tslib/tslib.es6.js","ng://adesso-grid-lib/lib/custom-template.directive.ts","ng://adesso-grid-lib/lib/tabbed-grid/tabbed-grid.component.ts","ng://adesso-grid-lib/lib/adesso-angular-lib.module.ts","ng://adesso-grid-lib/lib/model/tabbed-grid.ts"],"names":["InputVerifierService","prototype","exists","parent","parentName","property","Error","allExist","properties","properties_1","__values","o","m","Symbol","iterator","i","call","next","length","value","done","tslib_1.__values","properties_1_1","this","Injectable","args","providedIn","CustomTemplateDirective","ngAfterViewInit","inputVerifierService","Directive","selector","TemplateRef","Input","templateRef","TabbedGridComponent","_this","customTemplateDirectives","forEach","t","customTemplateRefs","rowClick","row","tabNumber","tabs","findIndex","e","id","push","label","computeTabLabel","data","selectedTabIndex","closeTab","index","splice","getCustomTemplate","customTemplateRef","Object","defineProperty","rows","map","v","dataSource","MatTableDataSource","sortingDataAccessor","sort","Component","template","ContentChild","ContentChildren","ViewChild","MatSort","AdessoAngularLibModule","NgModule","imports","CommonModule","MatSortModule","MatTabsModule","MatTableModule","declarations","exports","TEXT","DATE","NUMBER","ENUM"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InputVerifierService {\r\n\r\n  constructor() { }\r\n\r\n  exists(parent: any, parentName: string, property: string) {\r\n    if (!parent[property]) {\r\n      throw new Error('Property \"' + property + '\"  is missing in ' + parentName + '!');\r\n    }\r\n  }\r\n\r\n  allExist(parent: any, parentName: string, properties: string[]) {\r\n    for (const property of properties) {\r\n      this.exists(parent, parentName, property);\r\n    }\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, Input, TemplateRef, AfterViewInit } from '@angular/core';\r\nimport { InputVerifierService } from './input-verifier.service';\r\n\r\n@Directive({\r\n  selector: '[libCustomTemplate]'\r\n})\r\nexport class CustomTemplateDirective implements AfterViewInit {\r\n\r\n  @Input() property: string;\r\n\r\n  constructor(\r\n    public templateRef: TemplateRef<any>,\r\n    private inputVerifierService: InputVerifierService,\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.inputVerifierService.exists(this, 'CustomTemplateDirective', 'property');\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ContentChild, ContentChildren, Input, QueryList, TemplateRef, ViewChild } from '@angular/core';\r\nimport { MatSort, MatTableDataSource } from '@angular/material';\r\nimport { CustomTemplateDirective } from '../custom-template.directive';\r\nimport { InputVerifierService } from '../input-verifier.service';\r\nimport { ITableDefinition, ITableRow, ITableTab } from '../model/tabbed-grid';\r\n\r\n@Component({\r\n  selector: 'lib-tabbed-grid',\r\n  templateUrl: './tabbed-grid.component.html',\r\n  styleUrls: ['./tabbed-grid.component.css']\r\n})\r\nexport class TabbedGridComponent implements AfterViewInit {\r\n  @Input() computeTabLabel: (data: any) => string;\r\n  @Input() tableDefinition: ITableDefinition;\r\n  @Input() displayedColumns: string[];\r\n\r\n  @ContentChild('detailsTemplate') detailsTemplate: TemplateRef<any>;\r\n  @ContentChildren(CustomTemplateDirective) customTemplateDirectives: QueryList<CustomTemplateDirective>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  tabs: ITableTab[] = [];\r\n  selectedTabIndex = 0;\r\n  dataSource: MatTableDataSource<any>;\r\n  customTemplateRefs: { [key: string]: TemplateRef<any> } = {};\r\n\r\n  constructor(\r\n    private inputVerifierService: InputVerifierService,\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.inputVerifierService.allExist(this, 'TabbedGridComponent', [\r\n      'computeTabLabel',\r\n      'tableDefinition',\r\n      'detailsTemplate',\r\n    ]);\r\n\r\n    this.customTemplateDirectives.forEach((t) => {\r\n      if (this.customTemplateRefs[t.property]) {\r\n        throw new Error('Duplicate custom template definition found for ' + t.property);\r\n      }\r\n\r\n      this.customTemplateRefs[t.property] = t.templateRef;\r\n    });\r\n  }\r\n\r\n  rowClick(row: ITableRow) {\r\n    const tabNumber = this.tabs.findIndex((e) => e.row.id === row.id);\r\n\r\n    if (tabNumber === -1) {\r\n      this.tabs.push({ label: this.computeTabLabel(row.data), row });\r\n      this.selectedTabIndex = this.tabs.length;\r\n    } else {\r\n      this.selectedTabIndex = tabNumber + 1;\r\n    }\r\n  }\r\n\r\n  closeTab(index: number) {\r\n    this.tabs.splice(index, 1);\r\n    if (index === this.selectedTabIndex - 1) {\r\n      this.selectedTabIndex = 0;\r\n    }\r\n  }\r\n\r\n  getCustomTemplate(property: string): TemplateRef<any> {\r\n    const customTemplateRef = this.customTemplateRefs[property];\r\n    if (!customTemplateRef) {\r\n      throw new Error('Could not find custom template definition for ' + property);\r\n    }\r\n    return customTemplateRef;\r\n  }\r\n\r\n  @Input()\r\n  set tableData(data: any[]) {\r\n    if (!data) {\r\n      this.dataSource = null;\r\n      return;\r\n    }\r\n\r\n    let id = 0;\r\n    const rows = data.map<ITableRow>((v) => ({ data: v, id: id++ }));\r\n    this.dataSource = new MatTableDataSource(rows);\r\n    this.dataSource.sortingDataAccessor = (row: ITableRow, property) => {\r\n      return row.data[property];\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatSortModule, MatTableModule, MatTabsModule } from '@angular/material';\r\nimport { TabbedGridComponent } from './tabbed-grid/tabbed-grid.component';\r\nimport { CustomTemplateDirective } from './custom-template.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatSortModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n  ],\r\n  declarations: [\r\n    TabbedGridComponent,\r\n    CustomTemplateDirective,\r\n  ],\r\n  exports: [\r\n    TabbedGridComponent,\r\n    CustomTemplateDirective,\r\n  ]\r\n})\r\nexport class AdessoAngularLibModule { }\r\n","export enum ColumnType {\r\n    TEXT = 'TEXT',\r\n    DATE = 'DATE',\r\n    NUMBER = 'NUMBER',\r\n    ENUM = 'ENUM',\r\n}\r\n\r\nexport interface ITableColumnDefinition {\r\n    customContent?: boolean;\r\n    label: string;\r\n    property: string;\r\n    type: ColumnType;\r\n}\r\n\r\nexport interface ITableDefinition {\r\n    columns: ITableColumnDefinition[];\r\n    displayedColumns: string[];\r\n}\r\n\r\nexport interface ITableRow {\r\n    data: any;\r\n    id: number;\r\n}\r\n\r\nexport interface ITableTab {\r\n    row: ITableRow;\r\n    label: string;\r\n}\r\n"]}